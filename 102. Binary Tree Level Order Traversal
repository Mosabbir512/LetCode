/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    void bfs(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        while (!q.empty()) {
            vector<int>tm;
            int k=q.size();
            for (int i = 0; i < k; i++) {
                TreeNode* node = q.front();
                if(node!=nullptr)
                tm.push_back(node->val);
                q.pop();
                if (!node)
                    continue;
                else {
                    if (node->left != nullptr)
                        q.push(node->left);
                    if (node->right != nullptr)
                        q.push(node->right);
                }
            }
            ans.push_back(tm);
        }
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(!root)return {};
        bfs(root);
        return ans;
    }
};
