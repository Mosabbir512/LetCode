/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>ans;
    void dfs(TreeNode * root,int ct=1){
        if(!root)return;
        if(ans.size()<ct){
            ans.push_back(-2147483648);
        }
        int tm=ct-1;
        if(ans[tm]<root->val)ans[tm]=root->val;
        dfs(root->left,ct+1);
        dfs(root->right,ct+1);

    }
    vector<int> largestValues(TreeNode* root) {
        dfs(root);
        return ans;;
    }
};
