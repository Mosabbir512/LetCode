/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string s;
    void dfs(TreeNode * root ){
        if(!root)return;
        int vl=root->val;
         string str="";bool neg=false;
        if(vl<0)vl*=(-1),neg=true;;
        if(vl==0)s+="0";
        while(vl){
            int tm=vl%10;
            vl/=10;
            char ch=tm+48;
            str+=ch;
        }
        if(neg)str+="-";
        
        reverse(str.begin(),str.end());
        s+=str;
        if(root->left==nullptr && root->right==nullptr){
            return;
        }
        else if(root->right==nullptr){
            s+="(";dfs(root->left);s+=")";
        }
        else {
            s+="(";dfs(root->left);
            s+=")(";
            dfs(root->right);
            s+=")";
        }
    }
    string tree2str(TreeNode* root) {
        dfs(root);
        return s;
    }
};
