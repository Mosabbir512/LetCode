/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<double>>ans;
    void dfs(TreeNode * root,int ct){
        if(!root)return;
        if(ans.size()<=ct){
            vector<double>v;
            ans.push_back(v);
        }
        ans[ct].push_back(root->val);
        ++ct;
        dfs(root->left,ct);
        dfs(root->right,ct);
        --ct;
    }
    vector<double> averageOfLevels(TreeNode* root) {
        dfs(root,0);
        for(auto it:ans){
            for(auto val:it)cout<<val<<" ";
        }
        vector<double>fin;
        for(auto it:ans){
            double d=0;
            for(auto val:it)d+=val;
            d/=it.size();
            fin.push_back(d);
        }
        return fin;
    }
};
