/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>ans;
    map<int,int>mp;
    void dfs(TreeNode * root){
        if(!root)return ;
        int tm=root->val;
        mp[tm]++;
        dfs(root->left);
        dfs(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        int ct=0;
        dfs(root);
        for(auto it:mp){
            ct=max(ct,it.second);
            cout<<it.first<< " "<<it.second<<endl;
        }
        for(auto it:mp){
            if(ct==it.second){
                ans.push_back(it.first);
            }
        }
        return ans;
    }
};
