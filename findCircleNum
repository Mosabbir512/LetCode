class Solution {
public:
    vector<int>vis;
    int ans=0;
    void dfs(int i,vector<vector<int>>&isConnected){
        vis[i]=1;
       for(int j=0;j<isConnected.size();j++){
        if(isConnected[i][j]==1 && !vis[j]){
            dfs(j,isConnected);
        }
       }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n=isConnected.size();
        vis.resize(n,0);
        for(int i=0;i<n;i++){
            if(!vis[i]){
                cout<<i<<endl;
                ans++;
                dfs(i,isConnected);
            }
        }
        return ans;
    }
};
